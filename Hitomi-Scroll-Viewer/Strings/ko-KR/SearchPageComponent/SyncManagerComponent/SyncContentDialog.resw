<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FetchBookmarkOption1TextBlock.Text" xml:space="preserve">
    <value>북마크를 가져온 후 갤러리들을 다운로드 할까요?</value>
  </data>
  <data name="FetchTagFilterOption1RadioButton1.Content" xml:space="preserve">
    <value>덮어쓰기</value>
  </data>
  <data name="FetchTagFilterOption1RadioButton2.Content" xml:space="preserve">
    <value>추가하기</value>
  </data>
  <data name="FetchTagFilterOption1TextBlock.Text" xml:space="preserve">
    <value>태그 필터를 가져온 후 동기화 방법을 선택하세요</value>
  </data>
  <data name="FetchTagFilterOption2RadioButton1.Content" xml:space="preserve">
    <value>클라우드에서 가져온 태그 필터들로 교체하기</value>
  </data>
  <data name="FetchTagFilterOption2RadioButton2.Content" xml:space="preserve">
    <value>현재 기기에 저장되어 있는 태그 필터들을 유지하기</value>
  </data>
  <data name="FetchTagFilterOption2TextBlock.Text" xml:space="preserve">
    <value>동일한 이름을 가진 태그 필터들을 동기화 할 방법을 선택하세요</value>
  </data>
  <data name="InfoBar_Error_FileNotFound_Message" xml:space="preserve">
    <value>파일이 아직 업로드 되지 않았습니다.</value>
  </data>
  <data name="InfoBar_Error_Unauthorized_Message" xml:space="preserve">
    <value>Google Drive에 액세스할 권한이 없습니다. 다시 로그인 후 액세스 권한을 부여해주세요.</value>
  </data>
  <data name="InfoBar_Error_Unknown_Message" xml:space="preserve">
    <value>알 수 없는 오류가 발생했습니다. 잠시 뒤에 시도해주세요.</value>
  </data>
  <data name="InfoBar_Fetch_Canceled_Message" xml:space="preserve">
    <value>파일 가져오기가 취소되었습니다.</value>
  </data>
  <data name="InfoBar_Fetch_Success_Message" xml:space="preserve">
    <value>파일을 성공적으로 가져왔습니다.</value>
  </data>
  <data name="InfoBar_Upload_Canceled_Message" xml:space="preserve">
    <value>파일 업로드가 취소되었습니다.</value>
  </data>
  <data name="InfoBar_Upload_Success_Message" xml:space="preserve">
    <value>파일이 성공적으로 업로드 되었습니다.</value>
  </data>
  <data name="SyncDirectionRadioButton1.Content" xml:space="preserve">
    <value>업로드</value>
  </data>
  <data name="SyncDirectionRadioButton2.Content" xml:space="preserve">
    <value>가져오기</value>
  </data>
  <data name="TitleTextBlock.Text" xml:space="preserve">
    <value>동기화 옵션을 선택하세요</value>
  </data>
  <data name="UploadWarningInfoBar.Message" xml:space="preserve">
    <value>파일을 업로드하면 현재 클라우드에 동기화 되어있는 태그 필터 / 북마크가 덮어씌워집니다.</value>
  </data>
  <data name="UploadWarningInfoBar.Title" xml:space="preserve">
    <value>경고</value>
  </data>
</root>